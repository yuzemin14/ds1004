Instructions for MySQL on OS X

================
To install MySQL
================

1. Go to http://dev.mysql.com/downloads/mysql/
2. Download release: Mac OS X <your version>, DMG Archive
3. Sign in with your Oracle account (if you don't have one, sign up for one, then go back to step 1)
4. Click Download Now
5. Open the .dmg file, double-click the .pkg file
6. Click through the installer; make sure you save the password displayed in the pop-up window at the end

==========================
To start/stop MySQL Server
==========================

1. Open System Preferences, click on the MySQL button.
2. Click the Start/Stop MySQL Server button

=======================
To change root password
=======================

1. Start MySQL Server (if it isn't already running) 
2. Type the following command into Terminal

/usr/local/mysql/bin/mysqladmin -u root -p'oldpassword' password 'newpassword'

where oldpassword is the old password and newpassword is the new password

==========================
To connect to MySQL Server
==========================

1. Start MySQL Server (if it isn't already running) 
2. Type the following command into Terminal

/usr/local/mysql/bin/mysql -u root -p

and enter the root password.

=====
Notes
=====
-- To save some typing, you can add the following aliases to your ~/.bashrc file 

alias mysql=/usr/local/mysql/bin/mysql
alias mysqladmin=/usr/local/mysql/bin/mysqladmin
   
   Additionally, add the following command to your ~/.bash_profile file:

if [ -f ~/.bashrc ]; then . ~/.bashrc; fi

   This command is needed on OS X since by default Terminal.app invokes bash as a login shell.

-- If you change your password to nothing ('newpassword' = ''), then you can omit the -p option

-- If you use Homebrew, then you can ignore all (!) of the preceding instructions and just type: 

  1. brew install mysql
  2. mysql.server start
  3. mysql -u root 
  4. mysql.server stop

  Caveats:
   - We do not officially support Homebrew (you're on your own!)
   - Homebrew may configure MySQL with the security restriction --local-infile=0. This means that the LOCAL option to the LOAD DATA INFILE statement may not work. To get around this, try invoking the MySQL client with the --local-infile option.  
